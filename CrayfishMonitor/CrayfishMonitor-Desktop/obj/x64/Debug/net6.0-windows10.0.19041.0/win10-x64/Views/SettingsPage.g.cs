#pragma checksum "D:\GitHub\NUCST-CrayfishMonitor\CrayfishMonitor\CrayfishMonitor-Desktop\Views\SettingsPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "122DB47A809D2A66A1EB04851824C39579EB0CAD1E61E1C48A407BA955CBDEAE"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CrayfishMonitor_Desktop.Views
{
    partial class SettingsPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_Control_IsEnabled(global::Microsoft.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(global::Microsoft.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedValue = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class SettingsPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ISettingsPage_Bindings
        {
            private global::CrayfishMonitor_Desktop.Views.SettingsPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.ToggleSwitch obj2;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj3;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj4;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj5;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj6;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj7;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2IsEnabledDisabled = false;
            private static bool isobj3ItemsSourceDisabled = false;
            private static bool isobj3SelectedValueDisabled = false;
            private static bool isobj4ItemsSourceDisabled = false;
            private static bool isobj4SelectedValueDisabled = false;
            private static bool isobj5ItemsSourceDisabled = false;
            private static bool isobj5SelectedValueDisabled = false;
            private static bool isobj6ItemsSourceDisabled = false;
            private static bool isobj6SelectedValueDisabled = false;
            private static bool isobj7ItemsSourceDisabled = false;
            private static bool isobj7SelectedValueDisabled = false;

            private SettingsPage_obj1_BindingsTracking bindingsTracking;

            public SettingsPage_obj1_Bindings()
            {
                this.bindingsTracking = new SettingsPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 126 && columnNumber == 39)
                {
                    isobj2IsEnabledDisabled = true;
                }
                else if (lineNumber == 108 && columnNumber == 27)
                {
                    isobj3ItemsSourceDisabled = true;
                }
                else if (lineNumber == 109 && columnNumber == 27)
                {
                    isobj3SelectedValueDisabled = true;
                }
                else if (lineNumber == 90 && columnNumber == 27)
                {
                    isobj4ItemsSourceDisabled = true;
                }
                else if (lineNumber == 91 && columnNumber == 27)
                {
                    isobj4SelectedValueDisabled = true;
                }
                else if (lineNumber == 72 && columnNumber == 27)
                {
                    isobj5ItemsSourceDisabled = true;
                }
                else if (lineNumber == 73 && columnNumber == 27)
                {
                    isobj5SelectedValueDisabled = true;
                }
                else if (lineNumber == 54 && columnNumber == 27)
                {
                    isobj6ItemsSourceDisabled = true;
                }
                else if (lineNumber == 55 && columnNumber == 27)
                {
                    isobj6SelectedValueDisabled = true;
                }
                else if (lineNumber == 36 && columnNumber == 27)
                {
                    isobj7ItemsSourceDisabled = true;
                }
                else if (lineNumber == 37 && columnNumber == 27)
                {
                    isobj7SelectedValueDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\SettingsPage.xaml line 125
                        this.obj2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ToggleSwitch>(target);
                        this.bindingsTracking.RegisterTwoWayListener_2(this.obj2);
                        break;
                    case 3: // Views\SettingsPage.xaml line 107
                        this.obj3 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_3(this.obj3);
                        break;
                    case 4: // Views\SettingsPage.xaml line 89
                        this.obj4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_4(this.obj4);
                        break;
                    case 5: // Views\SettingsPage.xaml line 71
                        this.obj5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_5(this.obj5);
                        break;
                    case 6: // Views\SettingsPage.xaml line 53
                        this.obj6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_6(this.obj6);
                        break;
                    case 7: // Views\SettingsPage.xaml line 35
                        this.obj7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_7(this.obj7);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ISettingsPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::CrayfishMonitor_Desktop.Views.SettingsPage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::CrayfishMonitor_Desktop.Views.SettingsPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::CrayfishMonitor_Desktop.ViewModels.SettingsPageViewModel obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_IsDtrEnable(obj.IsDtrEnable, phase);
                        this.Update_ViewModel_EncodingList(obj.EncodingList, phase);
                        this.Update_ViewModel_SelectedEncoding(obj.SelectedEncoding, phase);
                        this.Update_ViewModel_StopBitList(obj.StopBitList, phase);
                        this.Update_ViewModel_SelectedStopBit(obj.SelectedStopBit, phase);
                        this.Update_ViewModel_ParityList(obj.ParityList, phase);
                        this.Update_ViewModel_SelectedParity(obj.SelectedParity, phase);
                        this.Update_ViewModel_DataBitList(obj.DataBitList, phase);
                        this.Update_ViewModel_SelectedDataBits(obj.SelectedDataBits, phase);
                        this.Update_ViewModel_BaudRateList(obj.BaudRateList, phase);
                        this.Update_ViewModel_SelectedBaudRate(obj.SelectedBaudRate, phase);
                    }
                }
            }
            private void Update_ViewModel_IsDtrEnable(global::Reactive.Bindings.ReactivePropertySlim<global::System.Boolean> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_IsDtrEnable(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_IsDtrEnable_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_ViewModel_IsDtrEnable_Value(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\SettingsPage.xaml line 125
                    if (!isobj2IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Control_IsEnabled(this.obj2, obj);
                    }
                }
            }
            private void Update_ViewModel_EncodingList(global::System.Collections.Generic.List<global::System.String> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\SettingsPage.xaml line 107
                    if (!isobj3ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj3, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedEncoding(global::Reactive.Bindings.ReactivePropertySlim<global::System.String> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_SelectedEncoding(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedEncoding_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_ViewModel_SelectedEncoding_Value(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\SettingsPage.xaml line 107
                    if (!isobj3SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj3, obj, null);
                    }
                }
            }
            private void Update_ViewModel_StopBitList(global::System.Collections.Generic.List<global::System.String> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\SettingsPage.xaml line 89
                    if (!isobj4ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj4, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedStopBit(global::Reactive.Bindings.ReactivePropertySlim<global::System.String> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_SelectedStopBit(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedStopBit_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_ViewModel_SelectedStopBit_Value(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\SettingsPage.xaml line 89
                    if (!isobj4SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj4, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ParityList(global::System.Collections.Generic.List<global::System.String> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\SettingsPage.xaml line 71
                    if (!isobj5ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj5, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedParity(global::Reactive.Bindings.ReactivePropertySlim<global::System.String> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_SelectedParity(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedParity_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_ViewModel_SelectedParity_Value(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\SettingsPage.xaml line 71
                    if (!isobj5SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj5, obj, null);
                    }
                }
            }
            private void Update_ViewModel_DataBitList(global::System.Collections.Generic.List<global::System.Int32> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\SettingsPage.xaml line 53
                    if (!isobj6ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj6, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedDataBits(global::Reactive.Bindings.ReactivePropertySlim<global::System.Int32> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_SelectedDataBits(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedDataBits_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_ViewModel_SelectedDataBits_Value(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\SettingsPage.xaml line 53
                    if (!isobj6SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj6, obj, null);
                    }
                }
            }
            private void Update_ViewModel_BaudRateList(global::System.Collections.Generic.List<global::System.Int32> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\SettingsPage.xaml line 35
                    if (!isobj7ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj7, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedBaudRate(global::Reactive.Bindings.ReactivePropertySlim<global::System.Int32> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_SelectedBaudRate(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedBaudRate_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_ViewModel_SelectedBaudRate_Value(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\SettingsPage.xaml line 35
                    if (!isobj7SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj7, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_2_IsEnabled()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.IsDtrEnable != null)
                            {
                                this.dataRoot.ViewModel.IsDtrEnable.Value = this.obj2.IsEnabled;
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_3_ItemsSource()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.EncodingList = (global::System.Collections.Generic.List<global::System.String>)this.obj3.ItemsSource;
                        }
                    }
                }
            }
            private void UpdateTwoWay_3_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.SelectedEncoding != null)
                            {
                                this.dataRoot.ViewModel.SelectedEncoding.Value = (global::System.String)this.obj3.SelectedValue;
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_4_ItemsSource()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StopBitList = (global::System.Collections.Generic.List<global::System.String>)this.obj4.ItemsSource;
                        }
                    }
                }
            }
            private void UpdateTwoWay_4_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.SelectedStopBit != null)
                            {
                                this.dataRoot.ViewModel.SelectedStopBit.Value = (global::System.String)this.obj4.SelectedValue;
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_5_ItemsSource()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.ParityList = (global::System.Collections.Generic.List<global::System.String>)this.obj5.ItemsSource;
                        }
                    }
                }
            }
            private void UpdateTwoWay_5_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.SelectedParity != null)
                            {
                                this.dataRoot.ViewModel.SelectedParity.Value = (global::System.String)this.obj5.SelectedValue;
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_6_ItemsSource()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.DataBitList = (global::System.Collections.Generic.List<global::System.Int32>)this.obj6.ItemsSource;
                        }
                    }
                }
            }
            private void UpdateTwoWay_6_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.SelectedDataBits != null)
                            {
                                this.dataRoot.ViewModel.SelectedDataBits.Value = (global::System.Int32)this.obj6.SelectedValue;
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_7_ItemsSource()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.BaudRateList = (global::System.Collections.Generic.List<global::System.Int32>)this.obj7.ItemsSource;
                        }
                    }
                }
            }
            private void UpdateTwoWay_7_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.SelectedBaudRate != null)
                            {
                                this.dataRoot.ViewModel.SelectedBaudRate.Value = (global::System.Int32)this.obj7.SelectedValue;
                            }
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class SettingsPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<SettingsPage_obj1_Bindings> weakRefToBindingObj; 

                public SettingsPage_obj1_BindingsTracking(SettingsPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<SettingsPage_obj1_Bindings>(obj);
                }

                public SettingsPage_obj1_Bindings TryGetBindingObject()
                {
                    SettingsPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel_IsDtrEnable(null);
                    UpdateChildListeners_ViewModel_SelectedEncoding(null);
                    UpdateChildListeners_ViewModel_SelectedStopBit(null);
                    UpdateChildListeners_ViewModel_SelectedParity(null);
                    UpdateChildListeners_ViewModel_SelectedDataBits(null);
                    UpdateChildListeners_ViewModel_SelectedBaudRate(null);
                }

                public void PropertyChanged_ViewModel_IsDtrEnable(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SettingsPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Reactive.Bindings.ReactivePropertySlim<global::System.Boolean> obj = sender as global::Reactive.Bindings.ReactivePropertySlim<global::System.Boolean>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_IsDtrEnable_Value(obj.Value, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Value":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsDtrEnable_Value(obj.Value, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Reactive.Bindings.ReactivePropertySlim<global::System.Boolean> cache_ViewModel_IsDtrEnable = null;
                public void UpdateChildListeners_ViewModel_IsDtrEnable(global::Reactive.Bindings.ReactivePropertySlim<global::System.Boolean> obj)
                {
                    if (obj != cache_ViewModel_IsDtrEnable)
                    {
                        if (cache_ViewModel_IsDtrEnable != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_IsDtrEnable).PropertyChanged -= PropertyChanged_ViewModel_IsDtrEnable;
                            cache_ViewModel_IsDtrEnable = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_IsDtrEnable = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_IsDtrEnable;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_SelectedEncoding(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SettingsPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Reactive.Bindings.ReactivePropertySlim<global::System.String> obj = sender as global::Reactive.Bindings.ReactivePropertySlim<global::System.String>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_SelectedEncoding_Value(obj.Value, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Value":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedEncoding_Value(obj.Value, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Reactive.Bindings.ReactivePropertySlim<global::System.String> cache_ViewModel_SelectedEncoding = null;
                public void UpdateChildListeners_ViewModel_SelectedEncoding(global::Reactive.Bindings.ReactivePropertySlim<global::System.String> obj)
                {
                    if (obj != cache_ViewModel_SelectedEncoding)
                    {
                        if (cache_ViewModel_SelectedEncoding != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_SelectedEncoding).PropertyChanged -= PropertyChanged_ViewModel_SelectedEncoding;
                            cache_ViewModel_SelectedEncoding = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_SelectedEncoding = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_SelectedEncoding;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_SelectedStopBit(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SettingsPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Reactive.Bindings.ReactivePropertySlim<global::System.String> obj = sender as global::Reactive.Bindings.ReactivePropertySlim<global::System.String>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_SelectedStopBit_Value(obj.Value, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Value":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedStopBit_Value(obj.Value, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Reactive.Bindings.ReactivePropertySlim<global::System.String> cache_ViewModel_SelectedStopBit = null;
                public void UpdateChildListeners_ViewModel_SelectedStopBit(global::Reactive.Bindings.ReactivePropertySlim<global::System.String> obj)
                {
                    if (obj != cache_ViewModel_SelectedStopBit)
                    {
                        if (cache_ViewModel_SelectedStopBit != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_SelectedStopBit).PropertyChanged -= PropertyChanged_ViewModel_SelectedStopBit;
                            cache_ViewModel_SelectedStopBit = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_SelectedStopBit = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_SelectedStopBit;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_SelectedParity(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SettingsPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Reactive.Bindings.ReactivePropertySlim<global::System.String> obj = sender as global::Reactive.Bindings.ReactivePropertySlim<global::System.String>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_SelectedParity_Value(obj.Value, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Value":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedParity_Value(obj.Value, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Reactive.Bindings.ReactivePropertySlim<global::System.String> cache_ViewModel_SelectedParity = null;
                public void UpdateChildListeners_ViewModel_SelectedParity(global::Reactive.Bindings.ReactivePropertySlim<global::System.String> obj)
                {
                    if (obj != cache_ViewModel_SelectedParity)
                    {
                        if (cache_ViewModel_SelectedParity != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_SelectedParity).PropertyChanged -= PropertyChanged_ViewModel_SelectedParity;
                            cache_ViewModel_SelectedParity = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_SelectedParity = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_SelectedParity;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_SelectedDataBits(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SettingsPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Reactive.Bindings.ReactivePropertySlim<global::System.Int32> obj = sender as global::Reactive.Bindings.ReactivePropertySlim<global::System.Int32>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_SelectedDataBits_Value(obj.Value, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Value":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedDataBits_Value(obj.Value, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Reactive.Bindings.ReactivePropertySlim<global::System.Int32> cache_ViewModel_SelectedDataBits = null;
                public void UpdateChildListeners_ViewModel_SelectedDataBits(global::Reactive.Bindings.ReactivePropertySlim<global::System.Int32> obj)
                {
                    if (obj != cache_ViewModel_SelectedDataBits)
                    {
                        if (cache_ViewModel_SelectedDataBits != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_SelectedDataBits).PropertyChanged -= PropertyChanged_ViewModel_SelectedDataBits;
                            cache_ViewModel_SelectedDataBits = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_SelectedDataBits = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_SelectedDataBits;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_SelectedBaudRate(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SettingsPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Reactive.Bindings.ReactivePropertySlim<global::System.Int32> obj = sender as global::Reactive.Bindings.ReactivePropertySlim<global::System.Int32>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_SelectedBaudRate_Value(obj.Value, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Value":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedBaudRate_Value(obj.Value, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Reactive.Bindings.ReactivePropertySlim<global::System.Int32> cache_ViewModel_SelectedBaudRate = null;
                public void UpdateChildListeners_ViewModel_SelectedBaudRate(global::Reactive.Bindings.ReactivePropertySlim<global::System.Int32> obj)
                {
                    if (obj != cache_ViewModel_SelectedBaudRate)
                    {
                        if (cache_ViewModel_SelectedBaudRate != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_SelectedBaudRate).PropertyChanged -= PropertyChanged_ViewModel_SelectedBaudRate;
                            cache_ViewModel_SelectedBaudRate = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_SelectedBaudRate = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_SelectedBaudRate;
                        }
                    }
                }
                public void RegisterTwoWayListener_2(global::Microsoft.UI.Xaml.Controls.ToggleSwitch sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Control.IsEnabledProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_2_IsEnabled();
                        }
                    });
                }
                public void RegisterTwoWayListener_3(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ItemsControl.ItemsSourceProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_3_ItemsSource();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_3_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_4(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ItemsControl.ItemsSourceProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_4_ItemsSource();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_4_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_5(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ItemsControl.ItemsSourceProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_ItemsSource();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_6(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ItemsControl.ItemsSourceProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_6_ItemsSource();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_6_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_7(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ItemsControl.ItemsSourceProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_7_ItemsSource();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_7_SelectedValue();
                        }
                    });
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\SettingsPage.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    SettingsPage_obj1_Bindings bindings = new SettingsPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

